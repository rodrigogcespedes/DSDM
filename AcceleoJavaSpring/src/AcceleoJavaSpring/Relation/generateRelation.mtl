[comment encoding = UTF-8 /]
[module generateRelation('http://www.example.org/diagramaClasesCompleto')]
[import AcceleoJavaSpring::Relation::generateRelationNotation/]
[import AcceleoJavaSpring::Entity::generateAssociativeClass /]

[template public generateRelation(a : Clase, paquete : Package)]

[for (i : Relacion | a.relaciones_contenidas)]
[if (not i.clases_asociativas_contenidas->isEmpty())][generateAssociativeClass(i, paquete)/][/if]
[if (i.tipo=TipoRelacion::unidireccional)]

	[if (i.multiplicidad=Multiplicidad::oneToOne)]
		[generateRelationOneToOne(i)/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if][i.destino.nombre/] [i.nombre/];
	[elseif (i.multiplicidad=Multiplicidad::oneToMany)]
		[generateRelationOneToMany(i)/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.destino.nombre/]> [i.nombre/] = new ArrayList<[i.destino.nombre/]>();
	[elseif (i.multiplicidad=Multiplicidad::manyToOne)]
		[generateRelationManyToOne()/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] [i.destino.nombre/] [i.nombre/];
	[elseif (i.multiplicidad=Multiplicidad::manyToMany)]
		[generateRelationManyToMany(i)/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.destino.nombre/]> [i.nombre/] = new ArrayList<[i.destino.nombre/]>();
	[/if]

[elseif (i.tipo=TipoRelacion::bidireccional)]
	
	[if (i.multiplicidad=Multiplicidad::oneToOne)]
		[if (i.destino.nombre=a.nombre)]
			[generateBidirectionalDestinoOneToOne(i)/]
			[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] [i.origen.nombre/] [i.nombre/];
		[else]
			[generateRelationOneToOne(i)/]
			[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] [i.destino.nombre/] [i.nombre/];
		[/if]
	[elseif (i.multiplicidad=Multiplicidad::oneToMany)]
		[if (i.destino.nombre=a.nombre)]
			[generateBidirectionalDestinoOneToMany(i)/]
			[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] [i.origen.nombre/] [i.nombre/];
		[else]
			[generateBidirectionalOrigenOneToMany(i)/]
			[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.destino.nombre/]> [i.nombre/] = new ArrayList<[i.destino.nombre/]>();
		[/if]
	[elseif (i.multiplicidad=Multiplicidad::manyToOne)]
		[if (i.destino.nombre=a.nombre)]
			[generateBidirectionalOrigenOneToMany(i)/]
			[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.origen.nombre/]> [i.nombre/] = new ArrayList<[i.origen.nombre/]>();
		[else]
			[generateRelationManyToOne(i)/]
			[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] [i.destino.nombre/] [i.nombre/];
		[/if]
	[elseif (i.multiplicidad=Multiplicidad::manyToMany)]
		[if (i.destino.nombre=a.nombre)]
			[generateBidirectionalDestinoManyToMany(i)/]
			[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.origen.nombre/]> [i.nombre/] = new ArrayList<[i.origen.nombre/]>();
		[else]
			[generateBidirectionalOrigenManyToMany(i)/]
			[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.destino.nombre/]> [i.nombre/] = new ArrayList<[i.destino.nombre/]>();
		[/if]
	[/if]

[elseif (i.tipo=TipoRelacion::agregacion)]
	
	[if (i.multiplicidad=Multiplicidad::oneToOne)]
		[generateRelationOneToOne(i)/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] [i.destino.nombre/] [i.nombre/];
	[elseif (i.multiplicidad=Multiplicidad::oneToMany)]
		[generateRelationOneToMany(i)/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.destino.nombre/]> [i.nombre/] = new ArrayList<[i.destino.nombre/]>();
	[elseif (i.multiplicidad=Multiplicidad::manyToOne)]
		[generateRelationManyToOne()/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] [i.destino.nombre/] [i.nombre/];
	[elseif (i.multiplicidad=Multiplicidad::manyToMany)]
		[generateRelationManyToMany(i)/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.destino.nombre/]> [i.nombre/] = new ArrayList<[i.destino.nombre/]>();
	[/if]

[elseif (i.tipo=TipoRelacion::composicion)]
	[if (i.multiplicidad=Multiplicidad::oneToOne)]
		[generateRelationOneToOne(i)/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] [i.destino.nombre/] [i.nombre/] = new [i.destino.nombre/]();
	[elseif (i.multiplicidad=Multiplicidad::oneToMany)]
		[generateRelationOneToMany(i)/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.destino.nombre/]> [i.nombre/] = new ArrayList<[i.destino.nombre/]>();
	[elseif (i.multiplicidad=Multiplicidad::manyToOne)]
		[generateRelationManyToOne()/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] [i.destino.nombre/] [i.nombre/] = new [i.destino.nombre/]();
	[elseif (i.multiplicidad=Multiplicidad::manyToMany)]
		[generateRelationManyToMany(i)/]
		[i.visibilidad/][if (i.esFinal)] final [/if][if (i.esStatic)] static [/if] List<[i.destino.nombre/]> [i.nombre/] = new ArrayList<[i.destino.nombre/]>();
	[/if]

[/if]
[/for]

[/template]
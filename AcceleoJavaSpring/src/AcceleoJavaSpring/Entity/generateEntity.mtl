[comment encoding = UTF-8 /]
[module generateEntity('http://www.example.org/diagramaClasesCompleto')]
[import AcceleoJavaSpring::Property::generateProperty/]
[import AcceleoJavaSpring::Operation::generateOperation/]
[import AcceleoJavaSpring::Relation::generateRelation/]
[import AcceleoJavaSpring::Relation::generateImplementation/]
[import AcceleoJavaSpring::Relation::generateExtension/]
[import AcceleoJavaSpring::controllers::generateControllers /]

[template public generateEntity(d : DiagramaClases)]
[for (paquete : Package | d.packages_contenidos)]
		
	[for (i : Clase | paquete.clasificadores_contenidos->filter(Clase))]
	[file ('src/main/java/'+d.artefacto_contenido.grupoId.replace('.', '/')+'/'+d.artefacto_contenido.artefactotId+'/entities/'+paquete.nombre+'/'+ i.nombre +'.java', false, 'UTF-8')]
	package [d.artefacto_contenido.grupoId/].[d.artefacto_contenido.artefactotId/].entities.[paquete.nombre/];
	[if (not (i.relaciones_contenidas->isEmpty()))]
		import javax.persistence.JoinColumn;
		import javax.persistence.CascadeType;
		[if (i.relaciones_contenidas->exists(multiplicidad = Multiplicidad::oneToOne))]
			import javax.persistence.OneToOne;
		[/if]
		[if (i.relaciones_contenidas->exists(multiplicidad = Multiplicidad::oneToMany))]
			import javax.persistence.OneToMany;
			import javax.persistence.JoinTable;
		[/if]
		[if (i.relaciones_contenidas->exists(multiplicidad = Multiplicidad::manyToOne))]
			import javax.persistence.ManyToOne;
		[/if]
		[if (i.relaciones_contenidas->exists(multiplicidad = Multiplicidad::manyToMany))]
			import javax.persistence.ManyToMany;
			import javax.persistence.JoinTable;
		[/if]
	[/if]
	import java.io.Serializable;
	import javax.persistence.Column;
	import javax.persistence.Entity;
	import javax.persistence.GeneratedValue;
	import javax.persistence.GenerationType;
	import javax.persistence.Id;
	import javax.persistence.Table;
	[if (i.esAuditable)]import org.hibernate.envers.Audited;[/if]
	import lombok.AllArgsConstructor;
	import lombok.Builder;
	import lombok.Data;
	import lombok.NoArgsConstructor;
	[if (i.herencias_contenidas->size()=0)]
		import [d.artefacto_contenido.grupoId/].[d.artefacto_contenido.artefactotId/].entities.Base;
	[else]
		import [d.artefacto_contenido.grupoId/].[d.artefacto_contenido.artefactotId/].entities.*;
	[/if]
	
		
	@Entity
	@Table(name= "[i.nombre.toLowerFirst()/]")
	@Data
	@AllArgsConstructor
	@NoArgsConstructor
	@Builder
	[comment agregar un if, para controlar el tema de las herencias /]
	
	[if (i.esAuditable)]@Audited[/if]
	public [if(i.esAbstracta)]abstract [/if]class [i.nombre/] [generateExtension(i)/] [generateImplementation(i)/] {
	[generateProperty(i)/]
	[generateRelation(i,paquete)/]
	
	}
	[/file]
	[if (i.tieneABM)]
		[generateControllers(i,paquete)/]
	[/if]
	
	
	[/for]
[/for]


[/template]




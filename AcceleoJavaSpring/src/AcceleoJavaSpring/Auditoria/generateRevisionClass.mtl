[comment encoding = UTF-8 /]
[module generateRevisionClass('http://www.example.org/diagramaClasesCompleto')]


[template public generateRevisionClass(art : Artefacto)]
[file ('src/main/java/'+art.grupoId+'.'+art.artefactotId+'/entities/audit/Revision.java', false, 'UTF-8')]
package [art.grupoId/].[art.artefactotId/].entities.audit;

import [art.grupoId/].[art.artefactotId/].Config.CustomRevisionListener;
import lombok.Data;
import org.hibernate.envers.RevisionEntity;
import org.hibernate.envers.RevisionNumber;
import org.hibernate.envers.RevisionTimestamp;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Date;

@Entity
@Table (name = "REVISION_INFO")
@RevisionEntity(CustomRevisionListener.class)
@Data
public class Revision implements Serializable {

    private static final long serialRevisionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "revision_seq")
    @SequenceGenerator(name = "revision_seq",sequenceName = "rbac.seq_revision_id")
    @RevisionNumber
    private int id;

    @Column(name = "REVISION_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    @RevisionTimestamp
    private Date date;
}
[/file]
[/template]

[comment encoding = UTF-8 /]
[module generateDiagrama('http://www.example.org/diagramaClasesCompleto')]
[import AcceleoJavaSpring::Entity::generateEntity/]
[import AcceleoJavaSpring::main::generateMainClass /]
[import AcceleoJavaSpring::repositories::generateBaseRepository /]
[import AcceleoJavaSpring::repositories::generateRepositories /]
[import AcceleoJavaSpring::Entity::generateBaseEntity /]
[import AcceleoJavaSpring::services::generateBaseService /]
[import AcceleoJavaSpring::services::generateServices /]
[import AcceleoJavaSpring::controllers::generateBaseController /]
[import AcceleoJavaSpring::Entity::generateInterface /]
[import AcceleoJavaSpring::Configurations::generatePom /]
[import AcceleoJavaSpring::Configurations::generateAplicationProperties /]
[import AcceleoJavaSpring::controllers::generateControllers /]
[import AcceleoJavaSpring::Configurations::generateRevision/]
[import AcceleoJavaSpring::Configurations::generateSwaggerConfig /]
[import AcceleoJavaSpring::Configurations::generateCustomRevisionListener /]
[import AcceleoJavaSpring::test::generateUnitController /]
[import AcceleoJavaSpring::test::generateUnitRepository /]
[import AcceleoJavaSpring::test::generateUnitService /]

[template public generateDiagrama(d : DiagramaClases)]
[comment @main/]
[generateMainClass(d)/]
[generateInterface(d)/]
[generateBaseEntity(d)/]
[generateEntity(d)/]
[generateAplicationProperties(d)/]
[generatePom(d)/]
[generateBaseController(d)/]
[generateControllers(d)/]
[generateBaseRepository(d)/]
[generateRepositories(d)/]
[generateBaseService(d)/]
[generateServices(d)/]
[generateRevision(d)/]
[generateSwaggerConfig(d)/]
[generateCustomRevisionListener(d)/]


[/template]
